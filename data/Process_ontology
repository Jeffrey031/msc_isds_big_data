In philosophy, a process ontology refers to a universal model of the structure of the world as an ordered wholeness. Such ontologies are fundamental ontologies, in contrast to the so-called applied ontologies. Fundamental ontologies do not claim to be accessible to any empirical proof in itself, but to be a structural design pattern, out of which empirical phenomena can be explained and put together consistently. Throughout Western history, the dominating fundamental ontology is the so-called substance theory. However, fundamental process ontologies are becoming more important in recent times, because the progress in the discovery of the foundations of physics spurred the development of a basic concept able to integrate such boundary notions as "energy," "object", and those of the physical dimensions of space and time.
In computer science, a process ontology is a description of the components and their relationships that make up a process. A formal process ontology is an ontology in the knowledge domain of processes. Often such ontologies take advantage of the benefits of an upper ontology. Planning software can be used to perform plan generation based on the formal description of the process and its constraints. Numerous efforts have been made to define a process/planning ontology.


== Processes ==
A process may be defined as a set of transformations of input elements into output elements with specific properties, with the transformations characterized by parameters and constraints, such as in manufacturing or biology. A process may also be defined as the workflows and sequence of events inherent in processes such as manufacturing, engineering and business processes.


== Ontologies ==


=== PSL ===

The Process Specification Language (PSL) is a process ontology developed for the formal description and modeling of basic manufacturing, engineering and business processes. This ontology provides a vocabulary of classes and relations for concepts at the ground level of event-instances, object-instances, and timepoints. PSL’s top level is built around the following:
Activity – a class or type of action, such as install-part, which is the class of actions in which parts are installed
Activity-occurrence – an event or action that takes place at a specific place and time, such as a specific instance of install-part occurring at a specific timestamp
Timepoint – a point in time
Object – anything that is not a timepoint or an activity


=== Cyc ===

In a process/planning ontology developed for the ontology Cyc, classes and relations above the ground level of PSL allow processes to be described purely at the type-level. The ground level of PSL uses the primitives of event-instance, object-instance, and timepoint description. The types above the ground level of PSL have also been expressed in PSL, showing that the type-level and the ground level are relatively independent. The type-levels for the Cyc process ontology above this ground level use the following concepts:

Process – formalized as a script
Aggregate process – a process at a level above that of a single episode of a process, to represent the numbers of participants in an action by ranges of integers and qualitative values like few or many
Script – a typical pattern of events that can be expected to re-occur
a script has subevents, which means that scripts are composite events
Scene – a subevent of a script
Roles/participants – specifies types of actors and objects that may play in the script or scene
Conditions – precondition(s) that must be true for a scene (event) to be executable, and postcondition(s) (effects) that must be true after a scene
Repetition – the number of repetitions of a process may be known, or may be unspecified, or may be repeated until a specific condition is true
Properties of ordering and constitution of repeated subevents for composite processes:
Begin-Ordered – subevents start at distinct time points that are totally ordered
End-Ordered – subevents end at distinct time points that are totally ordered
EndsBeforeEnd – subevents end before or at the same time as subevent instances which start before them
Sequential – no overlapping subevents
Terminating – there is a subevent after which no other subevents begin, and since all activities have a begin and end point, there is a time point at which the process ends
Uniform – all subevents are of the same event type
Identity – the identity of participants in a process, that actor(s) or object(s) playing a role in one scene or repetition are the same as those in another scene or repetition, is represented by constraints on possible participants


=== SUPER and DDPO ===
The project SUPER (Semantics Utilised for Process management within and between EnteRprises) has a goal of the definition of ontologies for Semantic Business Process Management (SBPM), but these ontologies can be reused in diverse environments. Part of this project is to define an Upper Process Ontology (UPO) that ties together all other SUPER ontologies. The results of the project SUPER include the UPO and a set of ontologies for processes and organizations. Most of the ontologies are written in WSML, and some are also written in OCML.
A candidate model for the UPO was DDPO (DOLCE+DnS Plan Ontology), a planning ontology which specifies plans and distinguishes between abstract and executable plans. DOLCE (Descriptive Ontology for Linguistic and Cognitive Engineering) aims at capturing the ontological categories underlying natural language and human commonsense. DnS (Descriptions and Situations), is a constructivist ontology that allows for context-sensitive redescriptions of the types and relations postulated by other given ontologies (or ground vocabularies). Together in DDPO, DOLCE and DnS are used to build a Plan Ontology that includes physical and non-physical objects (social entities, mental objects and states, conceptualizations, information objects, constraints), events, states, regions, qualities, and constructivist situations. The main target of DDPO is tasks, namely the types of actions, their sequencing, and the controls performed on them.


=== oXPDL ===
The ontology oXPDL is a process interchange ontology based on the standardised XML Process Definition Language (XPDL). The purpose of oXPDL is to model the semantics of XPDL process models in standardized Web ontology languages such as OWL and WSML, while incorporating features of existing standard ontologies such as PSL, RosettaNet, and SUMO.


=== GFO ===

The General Formal Ontology (GFO) is an ontology integrating processes and objects. GFO includes elaborations of categories like objects, processes, time and space, properties, relations, roles, functions, facts, and situations. GFO allows for different axiomatizations of its categories, such as the existence of atomic time-intervals vs. dense time. Two of the specialties of GFO are its account of persistence and its time model. Regarding persistence, the distinction between endurants (objects) and perdurants (processes) is made explicit within GFO by the introduction of a special category, a persistant [sic]. A persistant is a special category with the intention that its instances "remain identical" over time. With respect to time, time intervals are taken as primitive in GFO, and time-points (called "time boundaries") are derived. Moreover, time-points may coincide, which is convenient for modelling instantaneous changes.


=== m3po and m3pl ===
The multi metamodel process ontology (m3po) combines workflows and choreography descriptions so that it can be used as a process interchange ontology. For internal business processes, Workflow Management Systems are used for process modelling and allow describing and executing business processes. For external business processes, choreography descriptions are used to describe how business partners can cooperate. A choreography can be considered to be a view of an internal business process with the internal logic not visible, similar to public views on private workflows. The m3po ontology unifies both internal and external business processes, combining reference models and languages from the workflow and choreography domains. The m3po ontology is written in WSML. The related ontology m3pl, written in PSL using the extension FLOWS (First Order Logic for Web Services), enables the extraction of choreography interfaces from workflow models.The m3po ontology combines features of the following reference models and languages:

XPDL – a standard for exchanging workflow models, without runtime information, between different workflow management systems
PSL – an ontology that allows the capture of the semantics of workflow models and enables translations of models between workflow management systems
YAWL – a research workflow language that supports all workflow patterns directly
BPEL – an executable business process language and includes an abstract protocol
WS-CDL – a multi-party collaboration modelThe m3po ontology is organized using five key aspects of workflow specifications and workflow management. Because different workflow models put a different emphasis on the five aspects, the most elaborate reference model for each aspect was used and combined into m3po.

Functional and Behavioural – the most important concepts are processType, processOccurrence, activityType and activityOccurrence
Informational – defined by data and data-flow
Organizational – defines who is responsible for carrying out a specific task; security related issues
Operational – interaction of the workflows with their environment by manual tasks performed by users and automatic tasks performed by automated computer programs
Orthogonal – scheduling based on time; integrity and failure recovery


== See also ==
Automated planning and scheduling
Business process
Manufacturing process management
Object Process Methodology
Process management
Sequence of events
Systems theory


== References ==


== External links ==
Laboratory for Applied Ontology (LOA)
Semantics Utilised for Process Management within and between Enterprises (SUPER)
Descriptive Ontology for Linguistic and Cognitive Engineering (DOLCE)
Onto-Med
multi meta model process engineering (m3pe)